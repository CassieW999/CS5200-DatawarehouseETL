"0","```r
library(XML)

xmlObj <- xmlParse(\"Books-v3.xml\")
catalog <- xmlRoot(xmlObj)

numBook <- xmlSize(catalog)

df.book <- data.frame (id = vector (mode = \"character\", 
                                     length = numBook),
                     authorid = vector (mode = \"integer\", 
                                         length = numBook),
                     title = vector (mode = \"character\", 
                                       length = numBook),
                     edition = vector (mode = \"integer\", 
                                        length = numBook),
                     gid = vector (mode = \"integer\", 
                                        length = numBook),
                     price = vector (mode = \"character\", 
                                        length = numBook),
                     publish_date = vector (mode = \"character\", 
                                        length = numBook),
                     description = vector (mode = \"character\", 
                                        length = numBook),
                     stringsAsFactors = F)

df.author <- data.frame (authorid = integer(),
                         name = character(),
                         stringsAsFactors = F
                         )

df.genre <- data.frame (gid = integer(),
                        genre = character(),
                        stringsAsFactors = F
                        )

# Support function to parse Author
parseAuthor <- function (anAuthorNode)
{
  name <- xmlValue(anAuthorNode[[1]])
  newAuthor.df <- data.frame(name, stringsAsFactors = F)
  
  return(newAuthor.df)
}

# Support function to parse Genre
parseGenre <- function (aGenreNode)
{
  genre <- xmlValue(aGenreNode[[1]])
  newGenre.df <- data.frame(genre, stringsAsFactors = F)
  
  return(newGenre.df)
}

# check if that element is already in the data frame
rowExists <- function (aRow, aDF)
{
  n <- nrow(aDF)
  if (n == 0)
  {
    # data frame is empty, so can't exist
    return(0)
  }
  
  for (a in 1:n)
  {
    # check if all columns match for a row; ignore the aID column
    if (all(aDF[a,] == aRow[1,]))
    {
      # found a match; return it's ID
      return(a)
    }
  }
  
  # none matched
  return(0)
}

for (i in 1:numBook) {
  aRow <- catalog[[i]]
  a <- xmlAttrs(aRow)
  id <- as.character(a[1])
  
  title <- xmlValue(aRow[[2]])
  if (xmlName(aRow[[3]]) == \"edition\"){
    edition <- xmlValue(aRow[[3]])
    genreIterm <- aRow[[4]]
    price <- xmlValue(aRow[[5]])
    publish_date <- xmlValue(aRow[[6]])
    description <- xmlValue(aRow[[7]])
  }else{
    edition <- 1
    genreIterm <- aRow[[3]]
    price <- xmlValue(aRow[[4]])
    publish_date <- xmlValue(aRow[[5]])
    description <- xmlValue(aRow[[6]])
  }
  
  
  df.book[i,'id'] <- as.character(id)
  df.book[i,'title'] <- as.character(title)
  df.book[i,'edition'] <- as.character(edition)
  df.book[i,'price'] <- as.character(price)
  df.book[i,'publish_date'] <- as.character(publish_date)
  df.book[i,'description'] <- as.character(description)
  
  # parse the author
  author <- parseAuthor(aRow[[1]])
  pk.Author <- rowExists(author, df.author[2])
  if (pk.Author == 0)
  {
    # does not exist, so add
    pk.Author <- nrow(df.author) + 1
    df.author[pk.Author,2:ncol(df.author)] <- author[1]
    df.author[pk.Author,1] <- pk.Author
  }
  df.book$authorid[i] <- pk.Author
  
  # parse the genre
  genre <- parseGenre(genreIterm)
  pk.genre <- rowExists(genre, df.genre[2])
  if (pk.genre == 0)
  {
    # does not exist, so add
    pk.genre <- nrow(df.genre) + 1
    df.genre[pk.genre,2:ncol(df.genre)] <- genre[1]
    df.genre[pk.genre,1] <- pk.genre
  }
  df.book$gid[i] <- pk.genre
}

head(df.author,10)
```"
